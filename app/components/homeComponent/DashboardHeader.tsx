'use client'
import React, {useState} from 'react'
import { Plus } from "lucide-react";
import QuestionGeneratorPopup from "@/app/components/homeComponent/QuestionGeneratorPopup";
import {useAuth} from "@/context/authContext";

const DashboardHeader = () => {
    const [isOpen, setIsOpen] = useState(false)
    const {currentUser:user} = useAuth()
    if (!user) {
        return (
            <div className="flex items-center justify-between mb-8 flex-col gap-2 sm:flex-row sm:gap-0">
                <div>
                    <h1 className="text-4xl font-bold mb-2">
                        AI Coding <span className="bg-gradient-to-r from-cyan-400 to-purple-400 bg-clip-text text-transparent">Dashboard</span>
                    </h1>
                    <p className="text-gray-300 text-lg">Practice coding problems generated by AI to boost your programming skills</p>
                </div>
            </div>
        )
    }
    return (
        <div className="flex items-center justify-between mb-8 flex-col gap-2 sm:flex-row sm:gap-0">
            <div>
                <h1 className="text-4xl font-bold mb-2">
                    AI Coding <span className="bg-gradient-to-r from-cyan-400 to-purple-400 bg-clip-text text-transparent">Dashboard</span>
                </h1>
                <p className="text-gray-300 text-lg">Practice coding problems generated by AI to boost your programming skills</p>
            </div>
            <div className="flex items-center space-x-4">
                <div
                    className="group relative bg-gradient-to-r from-cyan-500 to-purple-500 text-white px-6 py-3 rounded-xl font-semibold overflow-hidden transition-all duration-300 hover:scale-105 hover:shadow-lg hover:shadow-purple-500/25"
                >
                            <button className="relative z-10 flex items-center" type='button'
                                    onClick={() => setIsOpen(true)}
                            >
                                <Plus className="w-5 h-5 mr-2" />
                                Generate Question
                            </button>
                    <div className="absolute inset-0 bg-gradient-to-r from-purple-500 to-cyan-500 opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                </div>
            </div>
            <QuestionGeneratorPopup
                isOpen={isOpen}
                setIsOpen={setIsOpen}
                userId={user.uid}
            />
        </div>
    )
}
export default DashboardHeader
